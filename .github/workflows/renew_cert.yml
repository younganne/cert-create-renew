name: Let's Encrypt Cert Renewal

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    branches: [ "main" ]
  # push:
  #   branches: [ "main" ]

  #schedule:
  #  - cron: '0 0 1 * *'  # Run every month at 1st day, 00:00

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - aws_account_id: 198558874934 # Anne's testing account

    steps:
      - name: Checkout
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ matrix.aws_account_id }}:role/IcsiItGithubOidcRoleForCertRenewal
          role-session-name: IcsiItGithubOidcSession
          aws-region: ${{ vars.AWS_REGION }}
      
      # - name: Configure AWS credentials and Route53 access policy
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ vars.AWS_REGION }}
      #     inline-session-policy: >-
      #       {
      #         "Version": "2012-10-17",
      #         "Statement": [
      #          {
      #           "Effect": "Allow",
      #           "Action": [
      #               "route53:ListHostedZones",
      #               "route53:GetChange"
      #                ],
      #           "Resource":"*"
      #         },
      #         {
      #           "Effect":"Allow",
      #           "Action":"route53:ChangeResourceRecordSets",
      #           "Resource":"arn:aws:route53:::hostedzone/${{ secrets.ZONE_ID }}"
      #         }
      #        ]
      #       }

      - name: Install Certbot and Plugins
        run: | 
          sudo apt-get update
          sudo apt install certbot openssl python3-certbot-dns-route53 -y

      - name: Create Certificates
        run: |
          sudo -s
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION=${{ vars.AWS_REGION }}
          CB_EMAIL=${{ secrets.CB_EMAIL }}
          CB_DOMAIN=${{ vars.DOMAIN }}
          sudo certbot -v certonly --staging --dns-route53 -d $CB_DOMAIN -d www.$CB_DOMAIN --config-dir . --cert-path . --non-interactive --agree-tos -m $CB_EMAIL
