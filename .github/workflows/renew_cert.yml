name: Let's Encrypt Cert Renewal
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    branches: [ "main" ]
  # push:
  #   branches: [ "main" ]

  #schedule:
  #  - cron: '0 0 1 * *'  # Run every month at 1st day, 00:00

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
      AWS_DEFAULT_REGION: us-west-2
      AWS_DEFAULT_OUTPUT: json
jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub‚Äôs OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-west-2
        ## the following creates an ARN based on the values entered into github secrets
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_DEPLOY_ROLE }}
        role-session-name: GitHubActionSession
    # - name: Install Certbot and Plugins
    #   run: | 
    #     sudo apt-get update
    #     sudo apt install certbot openssl python3-certbot-dns-route53 -y
    # - name: Create Certificates
    #   # env: 
    #   #   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #   #   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #   #   AWS_REGION: ${{ vars.AWS_REGION }}
    #   run: |
    #     sudo -s
    #     CB_EMAIL=${{ secrets.CB_EMAIL }}
    #     CB_DOMAIN=${{ vars.DOMAIN }}
    #     sudo certbot -v certonly --staging --dns-route53 -d $CB_DOMAIN -d www.$CB_DOMAIN --config-dir . --cert-path . --non-interactive --agree-tos -m $CB_EMAIL
        
    - name: Deploy EC2 Bastion
      uses: aws-actions/aws-cloudformation-github-deploy@v1.3.0
      with:
        name: EC2bastionHost
        ## change to path to template in your github repo
        template:   ${{ github.workspace }}/cloudformation/ec2-bastion.yml
        capabilities: CAPABILITY_IAM, CAPABILITY_NAMED_IAM
        no-fail-on-empty-changeset: "1"
        parameter-overrides: "pVpc=vpc-041ee43d7c44cb40d,pSubnet=subnet-012bc4850093c88f1"
    - name: List files in the repository
      run: |
        ls ${{ github.workspace }}
    - run: echo "üçè This job's status is ${{ job.status }}."